<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Virtual Study Group - Edit Material</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css"
        integrity="sha512-5A8nwdMOWrSz20fDsjczgUidUBR8liPYU+WymTZP1lmY9G6Oc7HlZv156XqnsgNUzTyMefFTcsFH/tnJE/+xBg=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="../../css/editMaterial.css">
    <link rel="stylesheet" href="../../icomoon\style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
</head>

<body>
    <nav>
        <div class="navbar">
            <div class="line"></div>
        </div>

        <a href="/home"><img src="../../images/logowhite.png" alt="Home"></a>
        <div class="profile-container">
            <a href="user-notification-request"><i class="fa fa-bell-o profile-bell" aria-hidden="true"></i></a>
            <img alt="No Image" src=<%=typeof proPic !="undefined" ? proPic : "" %> >
            <i class="fa fa-chevron-down profile-arrow" aria-hidden="true"></i>
            <div class="profile-container-option">
                <ul>
                    <li>
                        <a href="/user-profile">
                            <i class="fa fa-user" aria-hidden="true"></i>
                            <span class="profile-span">Profile</span>
                        </a>
                    </li>
                    <li>
                        <a href="/user-settings">
                            <i class="fa fa-cog" aria-hidden="true"></i>
                            <span class="profile-span">Settings</span>
                        </a>
                    </li>
                    <li>
                        <a href="/logout">
                            <i class="fa fa-power-off" aria-hidden="true"></i>
                            <span class="profile-span">LogOut</span>
                        </a>
                    </li>
                </ul>
            </div>
        </div>

    </nav>
    <div class="container">

        <%- include('partials/sidenav') %>

            <div class="content">
                <div class="mainContainer">
                    <header>
                        <h2>
                            Edit Material
                        </h2>
                    </header>

                    <form action="../../user/<%=material._id%>/editMaterial" method="post" enctype="multipart/form-data">
                        <input type="text" class="materialInfo" value="<%=material.title%>" name="matTitle"
                            placeholder="Enter Title Here">
                        <input type="text" class="materialInfo" value="<%=material.description%>" name="matDesc"
                            placeholder="Enter Description Here">

                        <section class="uploadContainer d-none ">
                            <div class="dropzone">
                                <div class="icon-container">

                                    <img src="../../images/file.svg" class="center" draggable="false" alt="File Icon">
                                    <img src="../../images/file.svg" class="left" draggable="false" alt="File Icon">
                                    <img src="../../images/file.svg" class="right" draggable="false" alt="File Icon">

                                </div>
                                <input type="file" id="inputFile" name="materialTags">
                                <div class="dropFiles">
                                    Drop Your Files Here or,
                                    <span class="browseBtn"> Browse</span>
                                </div>
                                <div class="fileDropped d-none">
                                    <p id="filePath">
                                        Nisarg Kansara Rakeshbhai
                                        <span class='close'></span>
                                    </p>
                                </div>
                            </div>

                        </section>
                        <div class="pdfContainer">
                            <iframe src="<%=material.material%>" width="640" height="480" allow="autoplay"
                                controls></iframe>
                        </div>

                        <div class="btnContainer">
                            <button id="change">
                                Change
                            </button>
                            <button class="red" id="remove">
                                Remove
                            </button>
                        </div>

                        <div class="tagString materialInfo" data-name="tagString">

                        </div>

                        <div class="btnSubmit">
                            <input type="submit" value="Save">
                        </div>
                    </form>

                </div>
            </div>
            <%- include('partials/search') %>


                <script>
                    //sidenav - ARROW v
                    const arrow = document.querySelector(".arrow");
                    arrow.addEventListener("click", (e) => {
                        const parent = e.target.parentElement.parentElement;
                        console.log(parent);
                        parent.classList.toggle("show-menu");
                        arrow.classList.toggle("rotate");
                    });

                    //Hamburger
                    const navbar = document.querySelector(".navbar");
                    const sidebar = document.querySelector(".sideNav");

                    navbar.addEventListener("click", () => {
                        navbar.classList.toggle("active");
                        sidebar.classList.toggle("close");
                    })

                    //Profile-arrow v
                    const profileArrow = document.querySelector(".profile-arrow");
                    const profileMenu = document.querySelector(".profile-container-option");
                    profileArrow.addEventListener("click", () => {
                        profileMenu.classList.toggle("open");
                        profileArrow.classList.toggle("rotate");
                    })

                    // Drag and Drop Files
                    const dropFiles = document.querySelector('.dropFiles');
                    const filePath = document.querySelector('#filePath');
                    const fileDropped = document.querySelector('.fileDropped')
                    const dropZone = document.querySelector('.dropzone');


                    dropZone.addEventListener('dragover', (e) => {
                        e.preventDefault();
                        if (!dropZone.classList.contains('dragged')) {
                            dropZone.classList.add('dragged')
                            console.log('dragging over element');
                        }
                    })

                    dropZone.addEventListener('dragleave', () => {
                        dropZone.classList.remove('dragged');
                    })


                    const fileInput = document.querySelector('#inputFile');


                    dropZone.addEventListener('drop', (e) => {
                        e.preventDefault();
                        ondDrop(e);

                        dropZone.classList.remove('dragged');
                        dropFiles.classList.add('d-none');
                        fileDropped.classList.remove('d-none');
                        filePath.innerText = `${e.dataTransfer.files[0].name}`;

                        const crossBtn = document.createElement('span');
                        crossBtn.classList.add('crossBtn');
                        filePath.appendChild(crossBtn)

                        crossBtn.addEventListener('click', () => {
                            console.log('cross Clicked');
                            dropFiles.classList.remove('d-none');
                            fileDropped.classList.add('d-none');
                            fileInput.value = '';
                        })

                    })


                    const browseBtn = document.querySelector('.browseBtn');

                    browseBtn.addEventListener('click', () => {
                        fileInput.click();
                    })

                    document.getElementById('inputFile').onchange = function (e) {
                        e.preventDefault();
                        console.log(e.target.files[0].name);
                        filePath.innerText = `${e.target.files[0].name}`;

                        const crossBtn = document.createElement('span');
                        crossBtn.classList.add('crossBtn');
                        filePath.appendChild(crossBtn);

                        fileDropped.classList.remove('d-none');
                        dropFiles.classList.add('d-none');

                        crossBtn.addEventListener('click', () => {
                            console.log('cross Clicked');
                            dropFiles.classList.remove('d-none');
                            fileDropped.classList.add('d-none');
                            fileInput.value = '';
                        })
                    };

                    function ondDrop(e) {
                        fileInput.files = e.dataTransfer.files;
                        const event = new Event('change', { bubbles: true });
                        fileInput.dispatchEvent(event);
                    }

                    const uploadContainer = document.querySelector('.uploadContainer');
                    const btnContainer = document.querySelector('.btnContainer');
                    const pdfContainer = document.querySelector('.pdfContainer');
                    const changeBtn = document.querySelector('#change');
                    const removeBtn = document.querySelector('#remove');

                    removeBtn.addEventListener('click', (e) => {
                        e.preventDefault();
                        console.log("clicked");
                        uploadContainer.classList.remove('d-none');
                        fileInput.value = '';
                        btnContainer.style.display = 'none';
                        pdfContainer.style.display = 'none';

                    });

                    changeBtn.addEventListener('click', (e) => {
                        e.preventDefault();
                        uploadContainer.classList.remove('d-none');
                        pdfContainer.style.display = 'none';
                        btnContainer.style.display = 'none';
                        fileInput.click();
                    });

                    // Tags
                    [].forEach.call(document.getElementsByClassName('tagString'), function (el) {
                        // console.log("Inside [ ]");
                        let hiddenInput = document.createElement('input'),
                            mainInput = document.createElement('input'),
                            tags = [];
                        hiddenInput.setAttribute('type', 'hidden');
                        hiddenInput.setAttribute('name', el.getAttribute('data-name'));

                        mainInput.setAttribute('type', 'text');
                        mainInput.classList.add('mainInput');
                        // mainInput.style.width = '100%';
                        mainInput.setAttribute('placeholder', 'Enter Your Tags Here');
                        // mainInput.style.border = '2px solid red';
                        mainInput.addEventListener('input', function () {
                            let enteredTags = mainInput.value.split(',');
                            if (enteredTags.length > 1) {
                                // console.log('inputted')
                                enteredTags.forEach(function (t) {
                                    let filteredTag = filterTag(t);
                                    if (filteredTag.length > 0) {
                                        addTag(filteredTag);
                                    }
                                })
                                mainInput.value = '';
                            }
                        })

                        mainInput.addEventListener('keydown', (e) => {
                            let keyCode = e.which || e.keyCode;
                            if (keyCode === 8 && mainInput.value.length === 0 && tags.length > 0) {
                                removeTag(tags.length - 1)
                            }
                        })
                        el.appendChild(mainInput);
                        el.appendChild(hiddenInput);

                        function addTag(text) {
                            let tag = {
                                text: text,
                                element: document.createElement('span')
                            };

                            tag.element.classList.add('tag')
                            tag.element.textContent = tag.text;

                            let closeBtn = document.createElement('span');
                            closeBtn.classList.add('close');
                            closeBtn.addEventListener('click', () => {
                                removeTag(tags.indexOf(tag));
                            })
                            tag.element.appendChild(closeBtn);

                            tags.push(tag);

                            el.insertBefore(tag.element, mainInput);
                            refreshTags();

                        }

                        function removeTag(index) {
                            let tag = tags[index];
                            tags.splice(index, 1);
                            el.removeChild(tag.element);
                            refreshTags();
                        }
                        function refreshTags() {
                            let tagsList = [];
                            tags.forEach((t) => {
                                tagsList.push(t.text);
                            })
                            hiddenInput.value = tagsList.join(',')
                        }
                        function filterTag(tag) {
                            return tag.replace(/[^\w -]/g, '').trim().replace(/\W+/g, '-');
                        }
                        let tagMaterial = '<%-material.tags%>';
                        let tagArr = tagMaterial.split(",");
                        console.log(tagArr);
                        tagArr.forEach((tag) => {
                            addTag(tag);
                        })
                    })
                </script>
</body>

</html>